import type { Bundle } from './bundle.js';
import type { Declaration } from './declaration.js';
import { EdgeFunction } from './edge_function.js';
import { Layer } from './layer.js';
interface GenerateManifestOptions {
    bundles?: Bundle[];
    declarations?: Declaration[];
    functions: EdgeFunction[];
    layers?: Layer[];
}
interface Manifest {
    bundler_version: string;
    bundles: {
        asset: string;
        format: string;
    }[];
    routes: {
        function: string;
        name?: string;
        pattern: string;
    }[];
    post_cache_routes: {
        function: string;
        name?: string;
        pattern: string;
    }[];
    layers: {
        name: string;
        flag: string;
    }[];
}
declare const generateManifest: ({ bundles, declarations, functions, layers }: GenerateManifestOptions) => Manifest;
interface WriteManifestOptions {
    bundles: Bundle[];
    declarations: Declaration[];
    distDirectory: string;
    functions: EdgeFunction[];
    layers?: Layer[];
}
declare const writeManifest: ({ bundles, declarations, distDirectory, functions, layers, }: WriteManifestOptions) => Promise<Manifest>;
export { generateManifest, Manifest, writeManifest };
